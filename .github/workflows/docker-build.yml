name: Build and Push Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Container Registry
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          # Use a safe SHA tag with an explicit prefix to avoid leading dashes
          type=sha,format=short,prefix=sha-
          # Also publish the 'latest' tag on the default branch (e.g., main)
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        load: ${{ github.event_name == 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          GIT_HASH=${{ github.sha }}
          PROJECT_VERSION=${{ steps.meta.outputs.version }}
        cache-from: type=gha,scope=buildkit
        cache-to: type=gha,mode=max,scope=buildkit

    - name: Test Docker image (local on PR)
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        TAG="$(echo "${{ steps.meta.outputs.tags }}" | head -n1)"
        echo "Testing locally loaded image: $TAG"
        docker run --rm --entrypoint="" "$TAG" namer --help

  test:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: read
    steps:
    - name: Log in to Container Registry
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (test)
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
    - name: Test Docker image (by digest with tag fallback)
      run: |
        DIGEST="${{ needs.build.outputs.digest }}"
        if [ -n "$DIGEST" ]; then
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@$DIGEST"
          echo "Testing image by digest: $IMAGE"
        else
          TAG="$(echo "${{ steps.meta.outputs.tags }}" | head -n1)"
          IMAGE="$TAG"
          echo "Digest missing; falling back to tag: $IMAGE"
        fi
        docker run --rm --entrypoint="" "$IMAGE" namer --help
