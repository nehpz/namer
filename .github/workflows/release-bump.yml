name: Bump Version and Open Release PR

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type"
        required: true
        type: choice
        default: patch
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Bump version with Poetry
        id: bump
        shell: bash
        run: |
          poetry version "${{ inputs.bump }}"
          NEW_VERSION=$(poetry version -s)
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "chore(release): bump version to ${{ steps.bump.outputs.new_version }}"

      - name: Create release PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "feat/release-${{ steps.bump.outputs.new_version }}"
          title: "chore(release): v${{ steps.bump.outputs.new_version }}"
          body: |
            Automated version bump to v${{ steps.bump.outputs.new_version }}.

            - Bumps `pyproject.toml` version using Poetry
            - On merge, CI will:
              - Build and push GHCR image tags `v${{ steps.bump.outputs.new_version }}`, `${{ steps.bump.outputs.new_version %%.* }}.${{ steps.bump.outputs.new_version#*. }}`, and `latest` on main
            - You can optionally tag the commit `v${{ steps.bump.outputs.new_version }}` to force semver tags in the Docker workflow
          commit-message: "chore(release): bump version to ${{ steps.bump.outputs.new_version }}"
          title-prefix: ""
          labels: release
          draft: false
